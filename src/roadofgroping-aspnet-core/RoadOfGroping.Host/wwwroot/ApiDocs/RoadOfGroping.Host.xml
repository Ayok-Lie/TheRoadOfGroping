<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RoadOfGroping.Host</name>
    </assembly>
    <members>
        <member name="M:RoadOfGroping.Host.Controllers.LoginController.Login(RoadOfGroping.Core.Users.Dtos.LoginDto)">
            <summary>
            登录功能
            </summary>
            <param name="user"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:RoadOfGroping.Host.Controllers.LoginController.RefreshAuthToken(RoadOfGroping.Core.ZRoadOfGropingUtility.Token.Dtos.AuthTokenDto)">
            <summary>
            刷新Token
            </summary>
            <param name="auth"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Controllers.LoginController.AbandonedLogin(RoadOfGroping.Core.Users.Dtos.LoginDto)">
            <summary>
            登录功能 --只能用于Cookie校验，无法用于jwt校验
            </summary>
            <returns></returns>
        </member>
        <member name="T:RoadOfGroping.Host.Controllers.RoadOfGropingControllerBase">
            <summary>
            基础控制器，所有特定控制器应该从这个控制器继承
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.Controllers.RoadOfGropingControllerBase.UserService">
            <summary>
            用户信息服务，通过它可以访问当前用户会话的信息
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.Controllers.RoadOfGropingControllerBase.ObjectMapper">
            <summary>
            对象映射器，用于对象之间的转换
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.Controllers.RoadOfGropingControllerBase.Localizer">
            <summary>
            本地化服务，用于获取地区特定的字符串
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.Controllers.RoadOfGropingControllerBase.#ctor(System.IServiceProvider)">
            <summary>
            构造函数，通过服务提供者获取所需的服务
            </summary>
            <param name="serviceProvider">服务提供者，用于获取依赖项</param>
        </member>
        <member name="M:RoadOfGroping.Host.Controllers.RoadOfGropingControllerBase.L(System.String)">
            <summary>
            通过字符串名称获取本地化字符串
            </summary>
            <param name="name">字符串名称</param>
            <returns>对应的本地化字符串</returns>
        </member>
        <member name="M:RoadOfGroping.Host.Controllers.RoadOfGropingControllerBase.L(System.String,System.Object[])">
            <summary>
            通过字符串名称和参数获取格式化的本地化字符串
            </summary>
            <param name="name">字符串名称</param>
            <param name="args">用于格式化的参数</param>
            <returns>格式化后的本地化字符串</returns>
        </member>
        <member name="T:RoadOfGroping.Host.Controllers.TestController">
            <summary>
            测试控制器
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.Controllers.TestController.Get">
            <summary>
            获取多语言
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Controllers.TestController.HttpClient">
            <summary>
            测试赋值请求头
            </summary>
            <returns></returns>
        </member>
        <member name="T:RoadOfGroping.Host.Extensions.HostBuilderExtensions">
            <summary>
            基础配置
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.Extensions.HostBuilderExtensions.configuration">
            <summary>
            应用配置
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddCoreServices(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            添加核心服务
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddUseCore(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            管道服务配置
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddJosnLocalization(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            多语言服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.UseRequestLocalization(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            多语言
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddFilters(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册全局拦截器
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.UserAutoFac(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            AutoFac 配置
            </summary>
            <param name="hostBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddAutoDI(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            配置自动注册依赖注入
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.UseRepository(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            仓储服务
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.ConfigureHangfireService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Hangfire.BackgroundJobServerOptions})">
            <summary>
            注册Hangfire
            </summary>
            <param name="services"></param>
            <param name="optionsAction"></param>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.ServicesMvc(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            动态WebAPI 配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddSwaggerGen(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Swagger 配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddUnitOfWork(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册UnitOfWork服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddJwtConfig(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            JWT 配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddCors(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            CORS策略
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.UseRedis(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Redis 注册
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册AutoMapper
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.AddSession(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            用户Session
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.UseHangfireStorage(Hangfire.IGlobalConfiguration)">
            <summary>
            使用 Hangfire Storage
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HostBuilderExtensions.UseSwaggerUI(Microsoft.AspNetCore.Builder.WebApplication,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            配置swaggerUI
            </summary>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HttpContextExtensions.FileInlineHandle(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            设置文件下载名称
            </summary>
            <param name="httpContext"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HttpContextExtensions.FileAttachmentHandle(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            设置文件附件名称
            </summary>
            <param name="httpContext"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HttpContextExtensions.GetLanguage(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取语言种类
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HttpContextExtensions.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            判断是否为异步请求
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HttpContextExtensions.GetClientIp(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取客户端IP
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HttpContextExtensions.GetUserAgent(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取浏览器标识
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.Extensions.HttpContextExtensions.IsWebSocketRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            判断是否是 WebSocket 请求
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:RoadOfGroping.Host.Middlewares.ApiInfoMiddleware">
            <summary>
            处理 API 端点的响应头和文件附件。
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.Middlewares.ApiInfoMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            处理 API 端点的响应头和文件附件。
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:RoadOfGroping.Host.UnifyResult.ExceptionMetadata">
            <summary>
            异常元数据
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ExceptionMetadata.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ExceptionMetadata.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ExceptionMetadata.OriginErrorCode">
            <summary>
            错误码（没被复写过的 ErrorCode ）
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ExceptionMetadata.Errors">
            <summary>
            错误对象（信息）
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ExceptionMetadata.Data">
            <summary>
            额外数据
            </summary>
        </member>
        <member name="T:RoadOfGroping.Host.UnifyResult.Fiters.SucceededUnifyResultFilter">
            <summary>
            规范化结构（请求成功）过滤器
            </summary>
        </member>
        <member name="F:RoadOfGroping.Host.UnifyResult.Fiters.SucceededUnifyResultFilter.FilterOrder">
            <summary>
            过滤器排序
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.Fiters.SucceededUnifyResultFilter.Order">
            <summary>
            排序属性
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Fiters.SucceededUnifyResultFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            处理规范化结果
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Fiters.SucceededUnifyResultFilter.GetValidationMetadata(System.Object)">
            <summary>
            获取验证错误信息
            </summary>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Fiters.SucceededUnifyResultFilter.CheckVaildResult(Microsoft.AspNetCore.Mvc.IActionResult,System.Object@)">
            <summary>
            检查是否是有效的结果（可进行规范化的结果）
            </summary>
            <param name="result"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Fiters.SucceededUnifyResultFilter.CheckStatusCodeNonUnify(Microsoft.AspNetCore.Http.HttpContext,RoadOfGroping.Host.UnifyResult.IRESTfulResultProvider@)">
            <summary>
            检查短路状态码（>=400）是否进行规范化处理
            </summary>
            <param name="context"></param>
            <param name="unifyResult"></param>
            <returns>返回 true 跳过处理，否则进行规范化处理</returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Fiters.SucceededUnifyResultFilter.CheckSucceededNonUnify(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            检查请求成功是否进行规范化处理
            </summary>
            <param name="method"></param>
            <param name="isWebRequest"></param>
            <returns>返回 true 跳过处理，否则进行规范化处理</returns>
        </member>
        <member name="T:RoadOfGroping.Host.UnifyResult.Fiters.UnitOfWorkFilter">
            <summary>
            工作单元Action过滤器
            </summary>
        </member>
        <member name="F:RoadOfGroping.Host.UnifyResult.Fiters.UnitOfWorkFilter.FilterOrder">
            <summary>
            过滤器排序
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.Fiters.UnitOfWorkFilter.Order">
            <summary>
            排序属性
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Fiters.UnitOfWorkFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            拦截请求
            </summary>
            <param name="context">动作方法上下文</param>
            <param name="next">中间件委托</param>
        </member>
        <member name="T:RoadOfGroping.Host.UnifyResult.IRESTfulResultProvider">
            <summary>
            规范化结果提供器
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.IRESTfulResultProvider.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,RoadOfGroping.Host.UnifyResult.ExceptionMetadata)">
            <summary>
            异常返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.IRESTfulResultProvider.OnSucceeded(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object)">
            <summary>
            成功返回值
            </summary>
            <param name="context"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.IRESTfulResultProvider.OnValidateFailed(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,RoadOfGroping.Host.UnifyResult.ValidationMetadata)">
            <summary>
            验证失败返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.IRESTfulResultProvider.OnResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32,RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions)">
            <summary>
            拦截返回状态码
            </summary>
            <param name="context"></param>
            <param name="statusCode"></param>
            <param name="unifyResultSettings"></param>
            <returns></returns>
        </member>
        <member name="T:RoadOfGroping.Host.UnifyResult.Providers.RESTfulResultProvider">
            <summary>
            RESTful 风格返回值
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Providers.RESTfulResultProvider.SetResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32,RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions)">
            <summary>
            设置响应状态码
            </summary>
            <param name="context"></param>
            <param name="statusCode"></param>
            <param name="unifyResultSettings"></param>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Providers.RESTfulResultProvider.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,RoadOfGroping.Host.UnifyResult.ExceptionMetadata)">
            <summary>
            异常返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Providers.RESTfulResultProvider.OnSucceeded(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object)">
            <summary>
            成功返回值
            </summary>
            <param name="context"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Providers.RESTfulResultProvider.OnValidateFailed(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,RoadOfGroping.Host.UnifyResult.ValidationMetadata)">
            <summary>
            验证失败/业务异常返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Providers.RESTfulResultProvider.OnResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32,RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions)">
            <summary>
            特定状态码返回值
            </summary>
            <param name="context"></param>
            <param name="statusCode"></param>
            <param name="unifyResultSettings"></param>
            <returns></returns>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.Providers.RESTfulResultProvider.RESTfulResult(System.Int32,System.Boolean,System.Object,System.Object)">
            <summary>
            返回 RESTful 风格结果集
            </summary>
            <param name="statusCode"></param>
            <param name="succeeded"></param>
            <param name="data"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="T:RoadOfGroping.Host.UnifyResult.RESTfulResult`1">
            <summary>
            RESTful 风格结果集
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.RESTfulResult`1.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.RESTfulResult`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.RESTfulResult`1.Succeeded">
            <summary>
            执行成功
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.RESTfulResult`1.Errors">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.RESTfulResult`1.Extras">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.RESTfulResult`1.Timestamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="T:RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions">
            <summary>
            规范化配置选项
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions.Return200StatusCodes">
            <summary>
            设置返回 200 状态码列表
            <para>默认：401，403，如果设置为 null，则标识所有状态码都返回 200 </para>
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions.AdaptStatusCodes">
            <summary>
            适配（篡改）Http 状态码（只支持短路状态码，比如 401，403，500 等）
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions.SupportMvcController">
            <summary>
            是否支持 MVC 控制台规范化处理
            </summary>
        </member>
        <member name="M:RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions.PostConfigure(RoadOfGroping.Host.UnifyResult.UnifyResultSettingsOptions,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            选项后期配置
            </summary>
            <param name="options"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:RoadOfGroping.Host.UnifyResult.ValidationMetadata">
            <summary>
            验证信息元数据
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.ValidationResult">
            <summary>
            验证结果
            </summary>
            <remarks>返回字典或字符串类型</remarks>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.Message">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.ModelState">
            <summary>
            验证状态
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.OriginErrorCode">
            <summary>
            错误码（没被复写过的 ErrorCode ）
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.FirstErrorProperty">
            <summary>
            首个错误属性
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.FirstErrorMessage">
            <summary>
            首个错误消息
            </summary>
        </member>
        <member name="P:RoadOfGroping.Host.UnifyResult.ValidationMetadata.Data">
            <summary>
            额外数据
            </summary>
        </member>
    </members>
</doc>
